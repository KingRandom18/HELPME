local CollectionService = game:GetService("CollectionService")
local template = game:GetService("ServerStorage").Template
local componetFolder = script.Parent.Componants
local tycoonStorage = game:GetService("ServerStorage").TycoonStorage


local PlayeManger = require(script.Parent.PlayeManger)




local function NewModel(model, cframe)
	local newModel = model:Clone()
	newModel:SetPrimaryPartCFrame(cframe)
	newModel.Parent = workspace
	return newModel
end

local Tycoon = {}
Tycoon.__index = Tycoon

function Tycoon.new(player, spawnPoint)
	local self = setmetatable({}, Tycoon)
	self.Owner = player
	self._topicEvent = Instance.new("BindableEvent")
	self._spawn = spawnPoint
	return self
end

function Tycoon:Init()
	self.Model = NewModel(template, self._spawn.CFrame)
	self._spawn:SetAttribute("Occupied", true)
	self.Owner.RespawnLocation = self.Model.Spawn
	self.Owner:LoadCharacter()

	self:LockAll()
	self:LoadUnlocks()
	self:WaitForExit()
end

function Tycoon:LoadUnlocks()
	for _, id in ipairs(PlayeManger.GetUnlockIds(self.Owner)) do
		self:PublishTopic("Button", id)
	end
end

function Tycoon:LockAll()
	for _, instance in ipairs(self.Model:GetDescendants()) do
		if CollectionService:HasTag(instance, "Unlockable") then
			self:Lock(instance)
		elseif CollectionService:HasTag(instance, "SellPart") then
			self:SetupSellPart(instance)
		else
			self:AddComponents(instance)
		end
	end
end

function Tycoon:Lock(instance)
	instance.Parent = tycoonStorage
	self:CreateComponent(instance, componetFolder.Unlockable)
end

function Tycoon:Unlock(instance, id)
	PlayeManger.AddUnlockId(self.Owner, id)
	
	CollectionService:RemoveTag(instance, "Unlockable")
	self:AddComponents(instance)
	instance.Parent = self.Model
end

function Tycoon:AddComponents(instance)
	for _, tag in ipairs(CollectionService:GetTags(instance)) do
		local component = componetFolder:FindFirstChild(tag)
		if component then
			self:CreateComponent(instance, component)
		end
	end
end

function Tycoon:CreateComponent(instance, componentScipt)
	local compModule = require(componentScipt)
	local newComp = compModule.new(self, instance)
	newComp:Init()
end

function Tycoon:PublishTopic(topicName, ...)
	self._topicEvent:Fire(topicName, ...)
end

function Tycoon:SubscribeTopic(topicName, callback)
	local connection = self._topicEvent.Event:Connect(function(name, ...)
		if name == topicName then
			callback(...)
		end
	end)
	return connection
end

function Tycoon:WaitForExit()
	PlayeManger.PlayerRemoving:Connect(function(player)
		if self.Owner == player then
			self:Destroy()
		end
	end)
end

function Tycoon:Destroy()
	self.Model:Destroy()
	self._spawn:SetAttribute("Occupied", false)
	self._topicEvent:Destroy()
end


function Tycoon:SetupSellPart(instance)
	local debounceTime = 1  
	local lastTouched = 0  

	instance.Touched:Connect(function(hit)
		local currentTime = tick()  
		if currentTime - lastTouched < debounceTime then
			return  
		end

		lastTouched = currentTime 

		local player = game:GetService("Players"):GetPlayerFromCharacter(hit.Parent)
		if player and player == self.Owner then

			local currentMoney = PlayeManger.GetMoney(player)


			local leaderstats = player:FindFirstChild("leaderstats")
			local valueStat = leaderstats and leaderstats:FindFirstChild("Value")
			local valueToAdd = valueStat and valueStat.Value or 10 -- Default to 10 if Value doesn't exist

			PlayeManger.SetMoney(player, currentMoney + valueToAdd)


			if valueStat then
				valueStat.Value = 10
			end

			local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
			if humanoid then
				humanoid.Health = 0
			end
		end
	end)
end


return Tycoon
